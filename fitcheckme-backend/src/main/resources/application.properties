#For some reason you can't use quotes around the values and when they're parsed, they're not stripped of whitespace so make sure there are no spaces leading or trailing the values

server.port=${SERVER_PORT}
spring.profiles.active=dev

#Database
#When running through docker container (have to build without tests using ./mvnw install -DskipTests), use host fitcheckme-db and port 5432. Running locally, use localhost port 5433 (the one that's forwarded on the compose)
spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${POSTGRES_DB}
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

#Disable this to remove specific error messages from exceptions
server.error.include-message=always

logging.level.org.springframework.jdbc=DEBUG

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

spring.sql.init.mode=always
#Enable below to have JPA auto initialize database tables. I have it disabled so that schema.sql has full control of what's being created
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=create


###App specific###
#Auth
fitcheckme.jwt-secret-key=${JWT_SECRET_KEY}
fitcheckme.jwt-access-token-validity-s=3600
fitcheckme.bcrypt-password-encoder-strength=10

#Users
fitcheckme.max-username-length=50
#TODO implement email length restriction
fitcheckme.max-email-length=100
fitcheckme.max-user-bio-length=300

#Outfits
fitcheckme.max-outfit-name-length=50
fitcheckme.max-outfit-desc-length=300
fitcheckme.max-outfit-tags=20
#TODO implement max outfit tags

#Garments
fitcheckme.max-garment-name-length=50
fitcheckme.max-urls-per-garment=5
fitcheckme.max-garment-url-length=200
fitcheckme.max-garment-tags=20
#TODO implement max garment tags

#Outfits
fitcheckme.max-garments-per-outfit=20
#TODO implement max garments per outfit
